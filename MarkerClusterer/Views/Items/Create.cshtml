@model MarkerClusterer.Models.Item

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Node", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Nodo, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Nodo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Item Parent</label>
            <div class="col-lg-10">
                @Html.DropDownListFor(x => x.ParentId, (SelectList)ViewBag.Parents, htmlAttributes: new { @class = "form-control" })                
                @Html.ValidationMessageFor(model => model.Nodo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", @id = "lat" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", @id = "lng" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <a class="btn btn-danger" href="@Url.Action("Index","Items")">Back</a>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <div id="map" style="width:100%;height:600px"></div>
    </div>
</div>



<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCObbBpnMALUeTO-BFhVm5w64F7hm8g6e4&?sensor=false&callback=initMap" async defer></script>

<script>
    var map;
    function initMap() {
        var mapDiv = document.getElementById('map');
        map = new google.maps.Map(mapDiv, {
            center: { lat: 4.729385077860802, lng: -74.08523554880912 },
          zoom: 8
        });

        map.addListener('click', function (e) {
            //window.alert(e.latLng);
            console.log("Coordenadas Seleccionadas" + e.latLng);
            document.getElementById("lat").value = e.latLng.lat();
            document.getElementById("lng").value = e.latLng.lng();
        });

    }
</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
